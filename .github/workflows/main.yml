# This is a basic workflow to help you get started with Actions
name: CI

permissions:
  contents: read         # allows the workflow to read the repository contents.
  actions: read          # allows the workflow to read the GitHub Actions metadata file.
  id-token: write        # allows the workflow to generate an ID token.
  pull-requests: write   # allows the workflow to create a comment on the pull request.

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    # https://docs.github.com/en/enterprise-cloud@latest/actions/using-workflows/events-that-trigger-workflows#providing-inputs
    # https://docs.github.com/en/actions/learn-github-actions/contexts#inputs-context
    inputs:
      context_type:
        type: choice
        options: ["github", "env"]
env:
  foo: "BAR"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  gh-cli:
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - id: step1
        uses: actions/checkout@v2
      - id: gh-cli 
        run: |
          gh auth status
  # # Job name
  # print-context-object:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - id: step1
  #       uses: actions/checkout@v2
  #     - id: print-context-object
  #       run: |
  #         echo '${{ secrets.GITHUB_TOKEN }}'
  #         echo '${{ github.token }}'
  #         if [[ "${{ inputs.context_type }}" == "github" ]]; then
  #           echo '${{ toJson(github) }}'
  #         elif [[ "${{ inputs.context_type }}" == "env" ]]; then
  #           echo '${{ toJson(env) }}'
  #         else
  #           echo '${{ toJson(inputs.context_type) }}'
  #         fi
  
  # terragrunt:
  #   uses: vishnups1/github-actions/.github/workflows/terragrunt.yml@main
  #   with:
  #     appname: "my-app"

  # job1:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     job1op1: ${{ steps.step4.outputs.test }}
  #   steps:
  #     - id: step1
  #       uses: actions/checkout@v2
  #     - id: step2
  #       run: echo '${{ github.ref }}'
  #     - id: step3
  #       run: echo "BAR=foo" >> $GITHUB_ENV
  #     - id: step4
  #       run: echo "test=step5-job1" >> "$GITHUB_OUTPUT"
  # job2:
  #   runs-on: ubuntu-latest
  #   needs: [job1]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: echo '${{ env.foo }}'
  #     - run: echo '${{ needs.job1.outputs.job1op1 }}'
